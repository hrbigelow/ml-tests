$ python mem_matmul_vs_conv.py 2>/dev/null | sort -k 3,3gr -t ' ' | column -t -s '  '
cnv1x1/conv/Conv2D:0                                      [10, 1, 1000, 512]  5120000  4
cnv1x1/conv/Squeeze:0                                     [10, 1000, 512]     5120000  4
matmul/MatMul:0                                           [10, 1000, 512]     5120000  4
cnv1x1/conv/ExpandDims:0                                  [10, 1, 1000, 32]   320000   4
zzzinput/input:0                                          [10, 1000, 32]      320000   4
zzzinput/input/mul:0                                      [10, 1000, 32]      320000   4
zzzinput/input/RandomStandardNormal:0                     [10, 1000, 32]      320000   4
matmul/stack:0                                            [10, 32, 512]       163840   4
cnv1x1/conv/ExpandDims_1:0                                [1, 1, 32, 512]     16384    4
cnv1x1/ExpandDims:0                                       [1, 32, 512]        16384    4
zzzinput/filt:0                                           [32, 512]           16384    4
zzzinput/filt/Assign:0                                    [32, 512]           16384    4
zzzinput/filt/Initializer/random_uniform:0                [32, 512]           16384    4
zzzinput/filt/Initializer/random_uniform/mul:0            [32, 512]           16384    4
zzzinput/filt/Initializer/random_uniform/RandomUniform:0  [32, 512]           16384    4
zzzinput/filt/read:0                                      [32, 512]           16384    4
zzzinput/input/shape:0                                    [3]                 3        4
zzzinput/filt/Initializer/random_uniform/shape:0          [2]                 2        4
cnv1x1/conv/dilation_rate:0                               [1]                 1        4
cnv1x1/conv/ExpandDims_1/dim:0                            []                  1        4
cnv1x1/conv/ExpandDims/dim:0                              []                  1        4
cnv1x1/ExpandDims/dim:0                                   []                  1        4
zzzinput/filt/Initializer/random_uniform/max:0            []                  1        4
zzzinput/filt/Initializer/random_uniform/min:0            []                  1        4
zzzinput/filt/Initializer/random_uniform/sub:0            []                  1        4
zzzinput/input/mean:0                                     []                  1        4
zzzinput/input/stddev:0                                   []                  1        4
conv equal to mm? True


This test reveals that the cnv1x1 approach has an extra 'Squeeze' tensor at a
size that dominates the overall size.  Yet, I have used both approaches in my
WaveNet implementation, and it seems there is no difference in GPU memory usage.



